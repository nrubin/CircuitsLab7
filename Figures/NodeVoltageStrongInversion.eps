%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.0.0.783 (R2012b). Operating System: Microsoft Windows 7.
%%Title: .\Figures\NodeVoltageStrongInversion.eps
%%CreationDate: 04/10/2013  15:50:22
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -289    17   904   804
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -289    17   904   804
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -4956 9600 csm

 1485   -48 14322  9438 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 17279 9720 rf
6 w
0 7365 13391 0 0 -7365 2246 8649 4 MP
PP
-13391 0 0 7365 13391 0 0 -7365 2246 8649 5 MP stroke
4 w
DO
SO
6 w
0 sg
2246 1284 mt 15637 1284 L
2246 8649 mt 15637 8649 L
15637 8649 mt 15637 1284 L
2246 8649 mt 2246 1284 L
2246 8649 mt 15637 8649 L
2246 8649 mt 2246 1284 L
3202 8649 mt 3202 8516 L
3202 1284 mt 3202 1418 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 216 FMSR

2926 8885 mt 
(-0.6) s
5115 8649 mt 5115 8516 L
5115 1284 mt 5115 1418 L
4839 8885 mt 
(-0.4) s
7028 8649 mt 7028 8516 L
7028 1284 mt 7028 1418 L
6752 8885 mt 
(-0.2) s
8941 8649 mt 8941 8516 L
8941 1284 mt 8941 1418 L
8881 8885 mt 
(0) s
10854 8649 mt 10854 8516 L
10854 1284 mt 10854 1418 L
10704 8885 mt 
(0.2) s
12767 8649 mt 12767 8516 L
12767 1284 mt 12767 1418 L
12617 8885 mt 
(0.4) s
14680 8649 mt 14680 8516 L
14680 1284 mt 14680 1418 L
14530 8885 mt 
(0.6) s
2246 8649 mt 2379 8649 L
15637 8649 mt 15503 8649 L
1911 8729 mt 
(2.8) s
2246 7831 mt 2379 7831 L
15637 7831 mt 15503 7831 L
1911 7911 mt 
(2.9) s
2246 7013 mt 2379 7013 L
15637 7013 mt 15503 7013 L
2091 7093 mt 
(3) s
2246 6195 mt 2379 6195 L
15637 6195 mt 15503 6195 L
1911 6275 mt 
(3.1) s
2246 5376 mt 2379 5376 L
15637 5376 mt 15503 5376 L
1911 5456 mt 
(3.2) s
2246 4558 mt 2379 4558 L
15637 4558 mt 15503 4558 L
1911 4638 mt 
(3.3) s
2246 3739 mt 2379 3739 L
15637 3739 mt 15503 3739 L
1911 3819 mt 
(3.4) s
2246 2921 mt 2379 2921 L
15637 2921 mt 15503 2921 L
1911 3001 mt 
(3.5) s
2246 2103 mt 2379 2103 L
15637 2103 mt 15503 2103 L
1911 2183 mt 
(3.6) s
2246 1284 mt 2379 1284 L
15637 1284 mt 15503 1284 L
1911 1364 mt 
(3.7) s
2246 1284 mt 15637 1284 L
2246 8649 mt 15637 8649 L
15637 8649 mt 15637 1284 L
2246 8649 mt 2246 1284 L
gs 2246 1284 13392 7366 rc
gr

gs 2005 3048 13874 5310 rc
80 W
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
2246 8093 PD
80 W
2272 8106 PD
80 W
2299 8095 PD
80 W
2326 8108 PD
80 W
2353 8108 PD
80 W
2380 8114 PD
80 W
2407 8109 PD
80 W
2433 8111 PD
80 W
2460 8109 PD
80 W
2487 8113 PD
80 W
2514 8113 PD
80 W
2541 8111 PD
80 W
2568 8116 PD
80 W
2594 8109 PD
80 W
2621 8108 PD
80 W
2648 8111 PD
80 W
2675 8111 PD
80 W
2702 8116 PD
80 W
2729 8111 PD
80 W
2755 8111 PD
80 W
2782 8109 PD
80 W
2809 8108 PD
80 W
2836 8113 PD
80 W
2863 8111 PD
80 W
2890 8111 PD
80 W
2916 8109 PD
80 W
2943 8109 PD
80 W
2970 8113 PD
80 W
2997 8108 PD
80 W
3024 8111 PD
80 W
3051 8111 PD
80 W
3077 8111 PD
80 W
3104 8111 PD
80 W
3131 8109 PD
80 W
3158 8111 PD
80 W
3185 8109 PD
80 W
3212 8111 PD
80 W
3238 8111 PD
80 W
3265 8109 PD
80 W
3292 8111 PD
80 W
3319 8111 PD
80 W
3346 8109 PD
80 W
3373 8109 PD
80 W
3399 8111 PD
80 W
3426 8109 PD
80 W
3453 8113 PD
80 W
3480 8108 PD
80 W
3507 8108 PD
80 W
3534 8109 PD
80 W
3560 8109 PD
80 W
3587 8108 PD
80 W
3614 8113 PD
80 W
3641 8111 PD
80 W
3668 8113 PD
80 W
3695 8113 PD
80 W
3721 8111 PD
80 W
3748 8111 PD
80 W
3775 8109 PD
80 W
3802 8109 PD
80 W
3829 8113 PD
80 W
3856 8111 PD
80 W
3882 8111 PD
80 W
3909 8109 PD
80 W
3936 8108 PD
80 W
3963 8108 PD
80 W
3990 8108 PD
80 W
4017 8108 PD
80 W
4043 8109 PD
80 W
4070 8111 PD
80 W
4097 8109 PD
80 W
4124 8108 PD
80 W
4151 8111 PD
80 W
4178 8111 PD
80 W
4205 8106 PD
80 W
4231 8109 PD
80 W
4258 8108 PD
80 W
4285 8108 PD
80 W
4312 8109 PD
80 W
4339 8109 PD
80 W
4366 8108 PD
80 W
4392 8106 PD
80 W
4419 8109 PD
80 W
4446 8109 PD
80 W
4473 8108 PD
80 W
4500 8108 PD
80 W
4527 8109 PD
80 W
4553 8108 PD
80 W
4580 8106 PD
80 W
4607 8108 PD
80 W
4634 8104 PD
80 W
4661 8103 PD
80 W
4688 8108 PD
80 W
4714 8106 PD
80 W
4741 8104 PD
80 W
4768 8104 PD
80 W
4795 8108 PD
80 W
4822 8103 PD
80 W
4849 8103 PD
80 W
4875 8106 PD
80 W
4902 8100 PD
80 W
4929 8098 PD
80 W
4956 8101 PD
80 W
4983 8090 PD
80 W
5010 8101 PD
80 W
5036 8095 PD
80 W
5063 8096 PD
80 W
5090 8098 PD
80 W
5117 8095 PD
80 W
5144 8095 PD
80 W
5171 8093 PD
80 W
5197 8095 PD
80 W
5224 8090 PD
80 W
5251 8093 PD
80 W
5278 8090 PD
80 W
5305 8090 PD
80 W
5332 8085 PD
80 W
5358 8085 PD
80 W
5385 8085 PD
80 W
5412 8082 PD
80 W
5439 8082 PD
80 W
5466 8077 PD
80 W
5493 8075 PD
80 W
5519 8072 PD
80 W
5546 8073 PD
80 W
5573 8068 PD
80 W
5600 8068 PD
80 W
5627 8067 PD
80 W
5654 8060 PD
80 W
5680 8062 PD
80 W
5707 8060 PD
80 W
5734 8057 PD
80 W
5761 8055 PD
80 W
5788 8054 PD
80 W
5815 8052 PD
80 W
5841 8044 PD
80 W
5868 8042 PD
80 W
5895 8037 PD
80 W
5922 8036 PD
80 W
5949 8032 PD
80 W
5976 8029 PD
80 W
6002 8029 PD
80 W
6029 8028 PD
80 W
6056 8023 PD
80 W
6083 8019 PD
80 W
6110 8016 PD
80 W
6137 8011 PD
80 W
6164 8011 PD
80 W
6190 8008 PD
80 W
6217 8000 PD
80 W
6244 7998 PD
80 W
6271 7996 PD
80 W
6298 7990 PD
80 W
6325 7985 PD
80 W
6351 7987 PD
80 W
6378 7977 PD
80 W
6405 7970 PD
80 W
6432 7967 PD
80 W
6459 7957 PD
80 W
6486 7962 PD
80 W
6512 7959 PD
80 W
6539 7949 PD
80 W
6566 7946 PD
80 W
6593 7941 PD
80 W
6620 7936 PD
80 W
6647 7933 PD
80 W
6673 7926 PD
80 W
6700 7921 PD
80 W
6727 7918 PD
80 W
6754 7915 PD
80 W
6781 7906 PD
80 W
6808 7900 PD
80 W
6834 7900 PD
80 W
6861 7893 PD
80 W
6888 7887 PD
80 W
6915 7880 PD
80 W
6942 7877 PD
80 W
6969 7870 PD
80 W
6995 7866 PD
80 W
7022 7859 PD
80 W
7049 7852 PD
80 W
7076 7849 PD
80 W
7103 7843 PD
80 W
7130 7834 PD
80 W
7156 7831 PD
80 W
7183 7830 PD
80 W
7210 7815 PD
80 W
7237 7812 PD
80 W
7264 7802 PD
80 W
7291 7795 PD
80 W
7317 7790 PD
80 W
7344 7784 PD
80 W
7371 7779 PD
80 W
7398 7771 PD
80 W
7425 7762 PD
80 W
7452 7761 PD
80 W
7478 7751 PD
80 W
7505 7744 PD
80 W
7532 7738 PD
80 W
7559 7733 PD
80 W
7586 7726 PD
80 W
7613 7718 PD
80 W
7639 7713 PD
80 W
7666 7707 PD
80 W
7693 7699 PD
80 W
7720 7697 PD
80 W
7747 7672 PD
80 W
7774 7667 PD
80 W
7800 7651 PD
80 W
7827 7651 PD
80 W
7854 7640 PD
80 W
7881 7635 PD
80 W
7908 7633 PD
80 W
7935 7618 PD
80 W
7961 7618 PD
80 W
7988 7602 PD
80 W
8015 7602 PD
80 W
8042 7586 PD
80 W
8069 7584 PD
80 W
8096 7586 PD
80 W
8123 7576 PD
80 W
8149 7569 PD
80 W
8176 7561 PD
80 W
8203 7555 PD
80 W
8230 7543 PD
80 W
8257 7533 PD
80 W
8284 7523 PD
80 W
8310 7519 PD
80 W
8337 7509 PD
80 W
8364 7502 PD
80 W
8391 7491 PD
80 W
8418 7483 PD
80 W
8445 7474 PD
80 W
8471 7461 PD
80 W
8498 7455 PD
80 W
8525 7445 PD
80 W
8552 7438 PD
80 W
8579 7429 PD
80 W
8606 7415 PD
80 W
8632 7412 PD
80 W
8659 7401 PD
80 W
8686 7389 PD
80 W
8713 7378 PD
80 W
8740 7371 PD
80 W
8767 7363 PD
80 W
8793 7358 PD
80 W
8820 7345 PD
80 W
8847 7334 PD
80 W
8874 7322 PD
80 W
8901 7314 PD
80 W
8928 7306 PD
80 W
8954 7296 PD
80 W
8981 7286 PD
80 W
9008 7276 PD
80 W
9035 7268 PD
80 W
9062 7258 PD
80 W
9089 7252 PD
80 W
9115 7235 PD
80 W
9142 7227 PD
80 W
9169 7219 PD
80 W
9196 7211 PD
80 W
9223 7195 PD
80 W
9250 7190 PD
80 W
9276 7180 PD
80 W
9303 7168 PD
80 W
9330 7155 PD
80 W
9357 7144 PD
80 W
9384 7136 PD
80 W
9411 7126 PD
80 W
9437 7116 PD
80 W
9464 7103 PD
80 W
9491 7095 PD
80 W
9518 7082 PD
80 W
9545 7070 PD
80 W
9572 7059 PD
80 W
9598 7049 PD
80 W
9625 7039 PD
80 W
9652 7029 PD
80 W
9679 7016 PD
80 W
9706 7005 PD
80 W
9733 6996 PD
80 W
9759 6982 PD
80 W
9786 6970 PD
80 W
9813 6962 PD
80 W
9840 6946 PD
80 W
9867 6936 PD
80 W
9894 6923 PD
80 W
9921 6911 PD
80 W
9947 6902 PD
80 W
9974 6890 PD
80 W
10001 6875 PD
80 W
10028 6862 PD
80 W
10055 6854 PD
80 W
10082 6846 PD
80 W
10108 6830 PD
80 W
10135 6816 PD
80 W
10162 6805 PD
80 W
10189 6794 PD
80 W
10216 6782 PD
80 W
10243 6771 PD
80 W
10269 6758 PD
80 W
10296 6744 PD
80 W
10323 6735 PD
80 W
10350 6720 PD
80 W
10377 6710 PD
80 W
10404 6700 PD
80 W
10430 6686 PD
80 W
10457 6672 PD
80 W
10484 6656 PD
80 W
10511 6653 PD
80 W
10538 6636 PD
80 W
10565 6623 PD
80 W
10591 6610 PD
80 W
10618 6594 PD
80 W
10645 6586 PD
80 W
10672 6571 PD
80 W
10699 6556 PD
80 W
10726 6543 PD
80 W
10752 6532 PD
80 W
10779 6515 PD
80 W
10806 6505 PD
80 W
10833 6489 PD
80 W
10860 6481 PD
80 W
10887 6463 PD
80 W
10913 6451 PD
80 W
10940 6438 PD
80 W
10967 6420 PD
80 W
10994 6409 PD
80 W
11021 6393 PD
80 W
11048 6381 PD
80 W
11074 6368 PD
80 W
11101 6355 PD
80 W
11128 6340 PD
80 W
11155 6324 PD
80 W
11182 6309 PD
80 W
11209 6298 PD
80 W
11235 6285 PD
80 W
11262 6270 PD
80 W
11289 6253 PD
80 W
11316 6237 PD
80 W
11343 6224 PD
80 W
11370 6209 PD
80 W
11396 6198 PD
80 W
11423 6178 PD
80 W
11450 6163 PD
80 W
11477 6150 PD
80 W
11504 6132 PD
80 W
11531 6119 PD
80 W
11557 6103 PD
80 W
11584 6090 PD
80 W
11611 6077 PD
80 W
11638 6064 PD
80 W
11665 6044 PD
80 W
11692 6031 PD
80 W
11718 6014 PD
80 W
11745 6000 PD
80 W
11772 5983 PD
80 W
11799 5962 PD
80 W
11826 5952 PD
80 W
11853 5934 PD
80 W
11880 5921 PD
80 W
11906 5905 PD
80 W
11933 5887 PD
80 W
11960 5872 PD
80 W
11987 5857 PD
80 W
12014 5843 PD
80 W
12041 5823 PD
80 W
12067 5808 PD
80 W
12094 5795 PD
80 W
12121 5774 PD
80 W
12148 5754 PD
80 W
12175 5738 PD
80 W
12202 5720 PD
80 W
12228 5705 PD
80 W
12255 5687 PD
80 W
12282 5671 PD
80 W
12309 5656 PD
80 W
12336 5636 PD
80 W
12363 5615 PD
80 W
12389 5599 PD
80 W
12416 5582 PD
80 W
12443 5568 PD
80 W
12470 5548 PD
80 W
12497 5533 PD
80 W
12524 5510 PD
80 W
12550 5494 PD
80 W
12577 5479 PD
80 W
12604 5460 PD
80 W
12631 5437 PD
80 W
12658 5422 PD
80 W
12685 5406 PD
80 W
12711 5386 PD
80 W
12738 5366 PD
80 W
12765 5348 PD
80 W
12792 5332 PD
80 W
12819 5314 PD
80 W
12846 5298 PD
80 W
12872 5276 PD
80 W
12899 5255 PD
80 W
12926 5237 PD
80 W
12953 5224 PD
80 W
12980 5204 PD
80 W
13007 5183 PD
80 W
13033 5163 PD
80 W
13060 5149 PD
80 W
13087 5131 PD
80 W
13114 5104 PD
80 W
13141 5086 PD
80 W
13168 5070 PD
80 W
13194 5052 PD
80 W
13221 5032 PD
80 W
13248 5014 PD
80 W
13275 4996 PD
80 W
13302 4977 PD
80 W
13329 4959 PD
80 W
13355 4939 PD
80 W
13382 4916 PD
80 W
13409 4900 PD
80 W
13436 4880 PD
80 W
13463 4861 PD
80 W
13490 4841 PD
80 W
13516 4823 PD
80 W
13543 4800 PD
80 W
13570 4779 PD
80 W
13597 4756 PD
80 W
13624 4741 PD
80 W
13651 4725 PD
80 W
13677 4707 PD
80 W
13704 4682 PD
80 W
13731 4661 PD
80 W
13758 4651 PD
80 W
13785 4625 PD
80 W
13812 4607 PD
80 W
13839 4584 PD
80 W
13865 4563 PD
80 W
13892 4545 PD
80 W
13919 4527 PD
80 W
13946 4507 PD
80 W
13973 4489 PD
80 W
14000 4474 PD
80 W
14026 4448 PD
80 W
14053 4432 PD
80 W
14080 4411 PD
80 W
14107 4394 PD
80 W
14134 4368 PD
80 W
14161 4358 PD
80 W
14187 4332 PD
80 W
14214 4316 PD
80 W
14241 4296 PD
80 W
14268 4276 PD
80 W
14295 4262 PD
80 W
14322 4232 PD
80 W
14348 4214 PD
80 W
14375 4196 PD
80 W
14402 4173 PD
80 W
14429 4157 PD
80 W
14456 4137 PD
80 W
14483 4116 PD
80 W
14509 4098 PD
80 W
14536 4078 PD
80 W
14563 4057 PD
80 W
14590 4039 PD
80 W
14617 4018 PD
80 W
14644 4001 PD
80 W
14670 3985 PD
80 W
14697 3964 PD
80 W
14724 3947 PD
80 W
14751 3921 PD
80 W
14778 3903 PD
80 W
14805 3887 PD
80 W
14831 3869 PD
80 W
14858 3849 PD
80 W
14885 3825 PD
80 W
14912 3810 PD
80 W
14939 3792 PD
80 W
14966 3771 PD
80 W
14992 3749 PD
80 W
15019 3731 PD
80 W
15046 3708 PD
80 W
15073 3692 PD
80 W
15100 3674 PD
80 W
15127 3653 PD
80 W
15153 3636 PD
80 W
15180 3609 PD
80 W
15207 3594 PD
80 W
15234 3574 PD
80 W
15261 3558 PD
80 W
15288 3537 PD
80 W
15314 3514 PD
80 W
15341 3497 PD
80 W
15368 3478 PD
80 W
15395 3460 PD
80 W
15422 3437 PD
80 W
15449 3419 PD
80 W
15475 3402 PD
80 W
15502 3379 PD
80 W
15529 3361 PD
80 W
15556 3345 PD
80 W
15583 3324 PD
80 W
15610 3306 PD
80 W
15637 3289 PD
gr

c8
gs 2246 1284 13392 7366 rc
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 300 FMSR

8201 9161 mt 
(V) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 240 FMSR

8401 9311 mt 
(dm) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 300 FMSR

8734 9161 mt 
( \(Volts\)) s
1789 5531 mt  -90 rotate
(V \(Volts\)) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 420 FMSR

5635  391 mt 
(Node Voltage as a Function of V) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 336 FMSR

11606  601 mt 
(dm) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 420 FMSR

12072  391 mt 
( ) s
3798 1067 mt 
(for a Differential Pair with Strong Inversion Bias Current) s

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
