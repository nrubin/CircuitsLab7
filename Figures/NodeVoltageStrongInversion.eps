%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.0.0.783 (R2012b). Operating System: Microsoft Windows 7.
%%Title: .\Figures\NodeVoltageStrongInversion.eps
%%CreationDate: 04/10/2013  22:43:43
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -201    94   806   709
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -201    94   806   709
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -3528 8460 csm

 1111   -48 12089  7380 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 14399 7408 rf
6 w
0 5307 11158 0 0 -5307 1872 6591 4 MP
PP
-11158 0 0 5307 11158 0 0 -5307 1872 6591 5 MP stroke
4 w
DO
SO
6 w
0 sg
1872 1284 mt 13030 1284 L
1872 6591 mt 13030 6591 L
13030 6591 mt 13030 1284 L
1872 6591 mt 1872 1284 L
1872 6591 mt 13030 6591 L
1872 6591 mt 1872 1284 L
2668 6591 mt 2668 6480 L
2668 1284 mt 2668 1396 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 216 FMSR

2392 6827 mt 
(-0.6) s
4263 6591 mt 4263 6480 L
4263 1284 mt 4263 1396 L
3987 6827 mt 
(-0.4) s
5857 6591 mt 5857 6480 L
5857 1284 mt 5857 1396 L
5581 6827 mt 
(-0.2) s
7451 6591 mt 7451 6480 L
7451 1284 mt 7451 1396 L
7391 6827 mt 
(0) s
9045 6591 mt 9045 6480 L
9045 1284 mt 9045 1396 L
8895 6827 mt 
(0.2) s
10639 6591 mt 10639 6480 L
10639 1284 mt 10639 1396 L
10489 6827 mt 
(0.4) s
12233 6591 mt 12233 6480 L
12233 1284 mt 12233 1396 L
12083 6827 mt 
(0.6) s
1872 6591 mt 1983 6591 L
13030 6591 mt 12918 6591 L
1537 6671 mt 
(2.8) s
1872 6002 mt 1983 6002 L
13030 6002 mt 12918 6002 L
1537 6082 mt 
(2.9) s
1872 5412 mt 1983 5412 L
13030 5412 mt 12918 5412 L
1717 5492 mt 
(3) s
1872 4823 mt 1983 4823 L
13030 4823 mt 12918 4823 L
1537 4903 mt 
(3.1) s
1872 4233 mt 1983 4233 L
13030 4233 mt 12918 4233 L
1537 4313 mt 
(3.2) s
1872 3643 mt 1983 3643 L
13030 3643 mt 12918 3643 L
1537 3723 mt 
(3.3) s
1872 3053 mt 1983 3053 L
13030 3053 mt 12918 3053 L
1537 3133 mt 
(3.4) s
1872 2464 mt 1983 2464 L
13030 2464 mt 12918 2464 L
1537 2544 mt 
(3.5) s
1872 1874 mt 1983 1874 L
13030 1874 mt 12918 1874 L
1537 1954 mt 
(3.6) s
1872 1284 mt 1983 1284 L
13030 1284 mt 12918 1284 L
1537 1364 mt 
(3.7) s
1872 1284 mt 13030 1284 L
1872 6591 mt 13030 6591 L
13030 6591 mt 13030 1284 L
1872 6591 mt 1872 1284 L
gs 1872 1284 11159 5308 rc
gr

gs 1631 2488 11641 3961 rc
80 W
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
1872 6191 PD
80 W
1894 6200 PD
80 W
1916 6192 PD
80 W
1939 6201 PD
80 W
1961 6201 PD
80 W
1983 6206 PD
80 W
2006 6202 PD
80 W
2028 6203 PD
80 W
2050 6202 PD
80 W
2073 6205 PD
80 W
2095 6205 PD
80 W
2117 6203 PD
80 W
2140 6207 PD
80 W
2162 6202 PD
80 W
2185 6201 PD
80 W
2207 6203 PD
80 W
2229 6203 PD
80 W
2252 6207 PD
80 W
2274 6203 PD
80 W
2296 6203 PD
80 W
2319 6202 PD
80 W
2341 6201 PD
80 W
2363 6205 PD
80 W
2386 6203 PD
80 W
2408 6203 PD
80 W
2431 6202 PD
80 W
2453 6202 PD
80 W
2475 6205 PD
80 W
2498 6201 PD
80 W
2520 6203 PD
80 W
2542 6203 PD
80 W
2565 6203 PD
80 W
2587 6203 PD
80 W
2609 6202 PD
80 W
2632 6203 PD
80 W
2654 6202 PD
80 W
2676 6203 PD
80 W
2699 6203 PD
80 W
2721 6202 PD
80 W
2744 6203 PD
80 W
2766 6203 PD
80 W
2788 6202 PD
80 W
2811 6202 PD
80 W
2833 6203 PD
80 W
2855 6202 PD
80 W
2878 6205 PD
80 W
2900 6201 PD
80 W
2922 6201 PD
80 W
2945 6202 PD
80 W
2967 6202 PD
80 W
2990 6201 PD
80 W
3012 6205 PD
80 W
3034 6203 PD
80 W
3057 6205 PD
80 W
3079 6205 PD
80 W
3101 6203 PD
80 W
3124 6203 PD
80 W
3146 6202 PD
80 W
3168 6202 PD
80 W
3191 6205 PD
80 W
3213 6203 PD
80 W
3236 6203 PD
80 W
3258 6202 PD
80 W
3280 6201 PD
80 W
3303 6201 PD
80 W
3325 6201 PD
80 W
3347 6201 PD
80 W
3370 6202 PD
80 W
3392 6203 PD
80 W
3414 6202 PD
80 W
3437 6201 PD
80 W
3459 6203 PD
80 W
3481 6203 PD
80 W
3504 6200 PD
80 W
3526 6202 PD
80 W
3549 6201 PD
80 W
3571 6201 PD
80 W
3593 6202 PD
80 W
3616 6202 PD
80 W
3638 6201 PD
80 W
3660 6200 PD
80 W
3683 6202 PD
80 W
3705 6202 PD
80 W
3727 6201 PD
80 W
3750 6201 PD
80 W
3772 6202 PD
80 W
3795 6201 PD
80 W
3817 6200 PD
80 W
3839 6201 PD
80 W
3862 6199 PD
80 W
3884 6198 PD
80 W
3906 6201 PD
80 W
3929 6200 PD
80 W
3951 6199 PD
80 W
3973 6199 PD
80 W
3996 6201 PD
80 W
4018 6198 PD
80 W
4040 6198 PD
80 W
4063 6200 PD
80 W
4085 6195 PD
80 W
4108 6194 PD
80 W
4130 6196 PD
80 W
4152 6188 PD
80 W
4175 6196 PD
80 W
4197 6192 PD
80 W
4219 6193 PD
80 W
4242 6194 PD
80 W
4264 6192 PD
80 W
4286 6192 PD
80 W
4309 6191 PD
80 W
4331 6192 PD
80 W
4354 6188 PD
80 W
4376 6191 PD
80 W
4398 6188 PD
80 W
4421 6188 PD
80 W
4443 6185 PD
80 W
4465 6185 PD
80 W
4488 6185 PD
80 W
4510 6182 PD
80 W
4532 6182 PD
80 W
4555 6179 PD
80 W
4577 6178 PD
80 W
4600 6175 PD
80 W
4622 6176 PD
80 W
4644 6173 PD
80 W
4667 6173 PD
80 W
4689 6172 PD
80 W
4711 6167 PD
80 W
4734 6168 PD
80 W
4756 6167 PD
80 W
4778 6165 PD
80 W
4801 6163 PD
80 W
4823 6162 PD
80 W
4845 6161 PD
80 W
4868 6155 PD
80 W
4890 6154 PD
80 W
4913 6150 PD
80 W
4935 6149 PD
80 W
4957 6147 PD
80 W
4980 6145 PD
80 W
5002 6145 PD
80 W
5024 6143 PD
80 W
5047 6140 PD
80 W
5069 6137 PD
80 W
5091 6135 PD
80 W
5114 6132 PD
80 W
5136 6132 PD
80 W
5159 6129 PD
80 W
5181 6123 PD
80 W
5203 6122 PD
80 W
5226 6121 PD
80 W
5248 6116 PD
80 W
5270 6113 PD
80 W
5293 6114 PD
80 W
5315 6107 PD
80 W
5337 6102 PD
80 W
5360 6100 PD
80 W
5382 6093 PD
80 W
5404 6096 PD
80 W
5427 6094 PD
80 W
5449 6087 PD
80 W
5472 6084 PD
80 W
5494 6081 PD
80 W
5516 6077 PD
80 W
5539 6075 PD
80 W
5561 6070 PD
80 W
5583 6067 PD
80 W
5606 6064 PD
80 W
5628 6062 PD
80 W
5650 6056 PD
80 W
5673 6051 PD
80 W
5695 6051 PD
80 W
5718 6047 PD
80 W
5740 6042 PD
80 W
5762 6037 PD
80 W
5785 6035 PD
80 W
5807 6030 PD
80 W
5829 6027 PD
80 W
5852 6022 PD
80 W
5874 6017 PD
80 W
5896 6015 PD
80 W
5919 6010 PD
80 W
5941 6004 PD
80 W
5964 6002 PD
80 W
5986 6001 PD
80 W
6008 5990 PD
80 W
6031 5988 PD
80 W
6053 5981 PD
80 W
6075 5976 PD
80 W
6098 5972 PD
80 W
6120 5968 PD
80 W
6142 5964 PD
80 W
6165 5958 PD
80 W
6187 5952 PD
80 W
6209 5951 PD
80 W
6232 5944 PD
80 W
6254 5939 PD
80 W
6277 5935 PD
80 W
6299 5931 PD
80 W
6321 5926 PD
80 W
6344 5920 PD
80 W
6366 5917 PD
80 W
6388 5912 PD
80 W
6411 5906 PD
80 W
6433 5905 PD
80 W
6455 5887 PD
80 W
6478 5884 PD
80 W
6500 5872 PD
80 W
6523 5872 PD
80 W
6545 5864 PD
80 W
6567 5860 PD
80 W
6590 5859 PD
80 W
6612 5849 PD
80 W
6634 5849 PD
80 W
6657 5837 PD
80 W
6679 5837 PD
80 W
6701 5825 PD
80 W
6724 5824 PD
80 W
6746 5825 PD
80 W
6768 5818 PD
80 W
6791 5813 PD
80 W
6813 5807 PD
80 W
6836 5803 PD
80 W
6858 5794 PD
80 W
6880 5787 PD
80 W
6903 5780 PD
80 W
6925 5777 PD
80 W
6947 5770 PD
80 W
6970 5765 PD
80 W
6992 5757 PD
80 W
7014 5751 PD
80 W
7037 5745 PD
80 W
7059 5735 PD
80 W
7082 5731 PD
80 W
7104 5724 PD
80 W
7126 5719 PD
80 W
7149 5712 PD
80 W
7171 5702 PD
80 W
7193 5700 PD
80 W
7216 5692 PD
80 W
7238 5683 PD
80 W
7260 5675 PD
80 W
7283 5670 PD
80 W
7305 5665 PD
80 W
7328 5661 PD
80 W
7350 5652 PD
80 W
7372 5643 PD
80 W
7395 5635 PD
80 W
7417 5629 PD
80 W
7439 5623 PD
80 W
7462 5616 PD
80 W
7484 5609 PD
80 W
7506 5602 PD
80 W
7529 5596 PD
80 W
7551 5589 PD
80 W
7573 5584 PD
80 W
7596 5573 PD
80 W
7618 5567 PD
80 W
7641 5561 PD
80 W
7663 5555 PD
80 W
7685 5543 PD
80 W
7708 5540 PD
80 W
7730 5532 PD
80 W
7752 5524 PD
80 W
7775 5515 PD
80 W
7797 5507 PD
80 W
7819 5501 PD
80 W
7842 5494 PD
80 W
7864 5486 PD
80 W
7887 5477 PD
80 W
7909 5471 PD
80 W
7931 5462 PD
80 W
7954 5453 PD
80 W
7976 5445 PD
80 W
7998 5438 PD
80 W
8021 5431 PD
80 W
8043 5424 PD
80 W
8065 5415 PD
80 W
8088 5406 PD
80 W
8110 5400 PD
80 W
8133 5390 PD
80 W
8155 5382 PD
80 W
8177 5376 PD
80 W
8200 5364 PD
80 W
8222 5357 PD
80 W
8244 5347 PD
80 W
8267 5339 PD
80 W
8289 5332 PD
80 W
8311 5324 PD
80 W
8334 5313 PD
80 W
8356 5304 PD
80 W
8378 5298 PD
80 W
8401 5292 PD
80 W
8423 5280 PD
80 W
8446 5271 PD
80 W
8468 5262 PD
80 W
8490 5254 PD
80 W
8513 5246 PD
80 W
8535 5238 PD
80 W
8557 5228 PD
80 W
8580 5219 PD
80 W
8602 5212 PD
80 W
8624 5201 PD
80 W
8647 5194 PD
80 W
8669 5187 PD
80 W
8692 5176 PD
80 W
8714 5167 PD
80 W
8736 5155 PD
80 W
8759 5153 PD
80 W
8781 5141 PD
80 W
8803 5131 PD
80 W
8826 5122 PD
80 W
8848 5110 PD
80 W
8870 5104 PD
80 W
8893 5094 PD
80 W
8915 5083 PD
80 W
8937 5074 PD
80 W
8960 5065 PD
80 W
8982 5054 PD
80 W
9005 5047 PD
80 W
9027 5035 PD
80 W
9049 5029 PD
80 W
9072 5016 PD
80 W
9094 5008 PD
80 W
9116 4998 PD
80 W
9139 4985 PD
80 W
9161 4977 PD
80 W
9183 4965 PD
80 W
9206 4957 PD
80 W
9228 4948 PD
80 W
9251 4938 PD
80 W
9273 4927 PD
80 W
9295 4916 PD
80 W
9318 4905 PD
80 W
9340 4897 PD
80 W
9362 4887 PD
80 W
9385 4877 PD
80 W
9407 4865 PD
80 W
9429 4853 PD
80 W
9452 4844 PD
80 W
9474 4833 PD
80 W
9497 4825 PD
80 W
9519 4811 PD
80 W
9541 4800 PD
80 W
9564 4791 PD
80 W
9586 4778 PD
80 W
9608 4768 PD
80 W
9631 4756 PD
80 W
9653 4747 PD
80 W
9675 4738 PD
80 W
9698 4728 PD
80 W
9720 4714 PD
80 W
9742 4705 PD
80 W
9765 4693 PD
80 W
9787 4682 PD
80 W
9810 4670 PD
80 W
9832 4655 PD
80 W
9854 4648 PD
80 W
9877 4635 PD
80 W
9899 4626 PD
80 W
9921 4614 PD
80 W
9944 4601 PD
80 W
9966 4590 PD
80 W
9988 4580 PD
80 W
10011 4569 PD
80 W
10033 4555 PD
80 W
10056 4544 PD
80 W
10078 4535 PD
80 W
10100 4519 PD
80 W
10123 4505 PD
80 W
10145 4493 PD
80 W
10167 4480 PD
80 W
10190 4470 PD
80 W
10212 4457 PD
80 W
10234 4445 PD
80 W
10257 4434 PD
80 W
10279 4420 PD
80 W
10301 4405 PD
80 W
10324 4393 PD
80 W
10346 4381 PD
80 W
10369 4371 PD
80 W
10391 4357 PD
80 W
10413 4346 PD
80 W
10436 4330 PD
80 W
10458 4318 PD
80 W
10480 4307 PD
80 W
10503 4293 PD
80 W
10525 4276 PD
80 W
10547 4266 PD
80 W
10570 4254 PD
80 W
10592 4240 PD
80 W
10615 4226 PD
80 W
10637 4213 PD
80 W
10659 4201 PD
80 W
10682 4188 PD
80 W
10704 4176 PD
80 W
10726 4161 PD
80 W
10749 4146 PD
80 W
10771 4133 PD
80 W
10793 4123 PD
80 W
10816 4109 PD
80 W
10838 4094 PD
80 W
10861 4080 PD
80 W
10883 4069 PD
80 W
10905 4056 PD
80 W
10928 4037 PD
80 W
10950 4024 PD
80 W
10972 4012 PD
80 W
10995 3999 PD
80 W
11017 3985 PD
80 W
11039 3972 PD
80 W
11062 3959 PD
80 W
11084 3945 PD
80 W
11106 3932 PD
80 W
11129 3918 PD
80 W
11151 3901 PD
80 W
11174 3890 PD
80 W
11196 3875 PD
80 W
11218 3861 PD
80 W
11241 3847 PD
80 W
11263 3834 PD
80 W
11285 3818 PD
80 W
11308 3802 PD
80 W
11330 3786 PD
80 W
11352 3775 PD
80 W
11375 3763 PD
80 W
11397 3750 PD
80 W
11420 3733 PD
80 W
11442 3717 PD
80 W
11464 3710 PD
80 W
11487 3692 PD
80 W
11509 3679 PD
80 W
11531 3662 PD
80 W
11554 3647 PD
80 W
11576 3634 PD
80 W
11598 3621 PD
80 W
11621 3607 PD
80 W
11643 3594 PD
80 W
11665 3583 PD
80 W
11688 3564 PD
80 W
11710 3552 PD
80 W
11733 3537 PD
80 W
11755 3525 PD
80 W
11777 3506 PD
80 W
11800 3499 PD
80 W
11822 3480 PD
80 W
11844 3469 PD
80 W
11867 3454 PD
80 W
11889 3440 PD
80 W
11911 3430 PD
80 W
11934 3408 PD
80 W
11956 3396 PD
80 W
11979 3383 PD
80 W
12001 3366 PD
80 W
12023 3354 PD
80 W
12046 3340 PD
80 W
12068 3325 PD
80 W
12090 3312 PD
80 W
12113 3298 PD
80 W
12135 3282 PD
80 W
12157 3269 PD
80 W
12180 3254 PD
80 W
12202 3242 PD
80 W
12225 3230 PD
80 W
12247 3215 PD
80 W
12269 3203 PD
80 W
12292 3184 PD
80 W
12314 3171 PD
80 W
12336 3160 PD
80 W
12359 3147 PD
80 W
12381 3133 PD
80 W
12403 3115 PD
80 W
12426 3104 PD
80 W
12448 3091 PD
80 W
12470 3076 PD
80 W
12493 3061 PD
80 W
12515 3048 PD
80 W
12538 3031 PD
80 W
12560 3019 PD
80 W
12582 3006 PD
80 W
12605 2991 PD
80 W
12627 2979 PD
80 W
12649 2959 PD
80 W
12672 2949 PD
80 W
12694 2934 PD
80 W
12716 2923 PD
80 W
12739 2907 PD
80 W
12761 2891 PD
80 W
12784 2879 PD
80 W
12806 2865 PD
80 W
12828 2852 PD
80 W
12851 2835 PD
80 W
12873 2822 PD
80 W
12895 2811 PD
80 W
12918 2794 PD
80 W
12940 2781 PD
80 W
12962 2769 PD
80 W
12985 2754 PD
80 W
13007 2741 PD
80 W
13030 2729 PD
gr

c8
gs 1872 1284 11159 5308 rc
gr

0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 300 FMSR

6711 7103 mt 
(V) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 240 FMSR

6911 7253 mt 
(dm) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 300 FMSR

7244 7103 mt 
( \(Volts\)) s
1415 4502 mt  -90 rotate
(V \(Volts\)) s
90 rotate
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 420 FMSR

4144  391 mt 
(Node Voltage as a Function of V) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 336 FMSR

10115  601 mt 
(dm) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 420 FMSR

10581  391 mt 
( ) s
2307 1067 mt 
(for a Differential Pair with Strong Inversion Bias Current) s

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
